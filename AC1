# Áreas da Computação Gráfica e Processamento de Imagens

## Síntese de Imagens (Computação Gráfica)

A síntese de imagens, ou computação gráfica, é a área que cuida da criação de imagens digitais usando objetos 3D e luzes feitas por software. É muito usada em jogos e animações.

Um exemplo é o Blender, onde, usando um script em Python, foi criada uma cena simples com:

- Uma esfera  
- Uma luz  
- Uma câmera  

Em seguida, o Blender realiza a renderização dessa cena, gerando uma imagem totalmente produzida pelo software.  
Isso mostra como é possível criar imagens do zero, sem a necessidade de fotos ou capturas do mundo real.

---

## Processamento de Imagens

O processamento de imagens trabalha com imagens que já existem, normalmente tiradas por câmeras, e tenta:

- Melhorar essas imagens  
- Obter alguma informação útil delas  

Um teste simples é usar o algoritmo de Canny com a biblioteca OpenCV em Python.  
Ele pega uma imagem e destaca as bordas dos objetos nela. Isso pode ajudar, por exemplo, quando for preciso:

- Separar partes da imagem  
- Preparar a imagem para outra tarefa  

---

## Visão Computacional

A visão computacional tenta entender o que tem nas imagens.

Um exemplo de aplicação é o reconhecimento facial com a biblioteca `face_recognition`.  
O código:

- Abre a webcam  
- Detecta rostos em tempo real  
- Desenha retângulos em volta deles  

Isso mostra como o computador consegue reconhecer rostos sozinho, útil em situações como:

- Segurança  
- Autenticação  

---

## Visualização Computacional

A visualização computacional transforma dados complexos em imagens para facilitar a interpretação da informação.

Um exemplo é o uso da biblioteca VTK, que pode mostrar exames médicos em 3D, como tomografias.  
Ela permite:

- Juntar várias imagens médicas  
- Formar uma visualização interativa  
- Ajudar profissionais a analisarem melhor os dados  

##   Testes

##  Processamento de Imagens

O processamento de imagens trabalha com imagens reais já existentes, geralmente capturadas por câmeras, buscando melhorar a imagem ou extrair informações relevantes.

 Aplicação testada:  
Foi utilizado o algoritmo de Canny, com a biblioteca OpenCV, para detectar bordas em uma imagem.  
A imagem de entrada foi carregada com sucesso, o algoritmo foi executado e as bordas dos objetos foram destacadas corretamente.

 Conclusão:  
Este exemplo demonstra como o processamento de imagens é capaz de realçar informações importantes, como contornos, sem precisar interpretar o conteúdo da imagem.

---

##  Visão Computacional

A visão computacional vai além do processamento: ela tenta entender o que está na imagem, reconhecendo objetos, padrões ou comportamentos.

 Aplicação testada:  
Foi usado o pacote `face_recognition` em Python para realizar reconhecimento facial em tempo real via webcam.  
Durante a execução, os rostos foram detectados corretamente e marcados com retângulos.

 Conclusão:  
Esse teste mostra como a visão computacional é capaz de interpretar visualmente o ambiente, permitindo funcionalidades como autenticação facial e monitoramento.

---

##  Visualização Computacional

A visualização computacional transforma dados complexos ou volumétricos em imagens visuais que facilitam a análise.

 Aplicação testada:  
Foi utilizada a biblioteca VTK para exibir uma visualização médica em 3D, a partir de dados simulados de tomografia.  
A renderização foi feita com sucesso e permitiu interação (zoom, rotação), simulando uma análise clínica real.

 Conclusão:  
Este exemplo evidencia como a visualização computacional ajuda a interpretar dados técnicos, facilitando o entendimento por profissionais, como médicos ou cientistas.

---
